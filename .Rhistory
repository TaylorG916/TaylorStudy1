scale_y_continuous(limits = c(0, 1.5), breaks = pretty_breaks(n = 9)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position = "right")
ggplot(Retest, aes(x = Correlation)) +
geom_histogram(position="identity", colour="grey40", alpha=0.2, bins = 10) +
facet_wrap(~ Trait, nrow = 3)
library(readxl)
Test_and_retest_scores_1 <- read_excel("Test-Retest/Test and retest scores-1.xlsx",
sheet = "Sheet4")
Retest <- Test_and_retest_scores_1
View(Retest)
Test_and_retest_scores_1 <- read_excel("Test-Retest/Test and retest scores-1.xlsx",
sheet = "Sheet4")
library(readxl)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
sheet = "Sheet4")
View(Test_and_retest_scores_1)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
+     sheet = "Sheet4")
Retest <- Test_and_retest_scores_1
library(readxl)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
sheet = "Sheet4")
View(Test_and_retest_scores_1)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
+     sheet = "Sheet4")
Retest <- Test_and_retest_scores_1
View(Retest)
Retest <- Test_and_retest_scores_1
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
+     sheet = "Sheet4")
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx", +     sheet = "Sheet4")
Retest <- Test_and_retest_scores_1
library(readxl)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
sheet = "Sheet4")
View(Test_and_retest_scores_1)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
+     sheet = "Sheet4")
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
+ sheet = "Sheet4")
library(readxl)
Test_and_retest_scores_1 <- read_excel("Documents/Swinburne/PHD/PhD Thesis /Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/Test-Retest/Test and retest scores-1.xlsx",
sheet = "Sheet4")
View(Test_and_retest_scores_1)
Retest <- Test_and_retest_scores_1
Retest$Trait <- factor(Retest$Trait)
Retest$Participant <- factor(Retest$Participant)
levels(Retest$Trait) <- c("Trustworthiness", "Dominance", "Attractiveness")
levels(Retest$Trait)
describeBy(x = Retest, group = Retest$Trait)
ggplot(Retest, aes(x = Correlation)) +
geom_histogram(position="identity", colour="grey40", alpha=0.2, bins = 10) +
facet_wrap(~ Trait, nrow = 3)
levels(Retest$Trait) <- c("Attractiveness", "Dominance", "Trustworthiness")
#across the three traits.
ggplot(Retest, aes(x = Correlation)) +
geom_histogram(position="identity", colour="grey40", alpha=0.2, bins = 10) +
facet_wrap(~ Trait, nrow = 3)
levels(Retest$Trait) <- c("Trustworthiness", "Dominance", "Attractiveness")
ggplot(Retest, aes(x = Correlation)) +
geom_histogram(position="identity", colour="grey40", alpha=0.2, bins = 10) +
facet_wrap(~ Trait, nrow = 3)
Retest$Trait1 <- factor(Retest$Trait, levels = c("Attractiveness", "Dominance", "Trustworthiness"))
ggplot(Retest, aes(x = Correlation)) +
geom_histogram(position="identity", colour="grey40", alpha=0.2, bins = 10) +
facet_wrap(~ Trait1, nrow = 3)
ggplot(Retest, aes(x = Correlation)) +
geom_histogram(position="identity", colour="grey40", alpha=0.2, bins = 10) +
facet_wrap(~ Trait1, nrow = 3) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(), axis.line = element_line(colour = "black"))
M1 <- lmer(Variance ~ (1|Participant), data = DataVar, REML = FALSE)
M2 <- lmer(Variance ~ Identity + (1|Participant), data = DataVar, REML = FALSE)
M3 <- lmer(Variance ~ Trait + (1|Participant), data = DataVar, REML = FALSE)
M4 <- lmer(Variance ~ Trait + Identity + (1|Participant), data = DataVar, REML = FALSE)
M5 <- lmer(Variance ~ Trait*Identity + (1|Participant), data = DataVar, REML = FALSE)
anova(M1, M2, M3, M4, M5)
ggplot(data = VarCollapse, aes(Identity, Variance_mean_mean, group = Trait, colour = Trait)) +
geom_line() +
geom_point() +
labs(x= "Identity", y = "Mean Variability Score") +
scale_y_continuous(limits = c(0, 1.5), breaks = pretty_breaks(n = 9)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position = "right")
ggplot(data = VarCollapse, aes(Identity, Variance_mean_mean, group = Trait, colour = Trait)) +
geom_line() +
geom_point() +
labs(x= "Identity", y = "Mean Variability Score") +
scale_y_continuous(limits = c(0, 1.5), breaks = pretty_breaks(n = 9)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position = "below")
ggplot(data = VarCollapse, aes(Identity, Variance_mean_mean, group = Trait, colour = Trait)) +
geom_line() +
geom_point() +
labs(x= "Identity", y = "Mean Variability Score") +
scale_y_continuous(limits = c(0, 1.5), breaks = pretty_breaks(n = 9)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.position = "bottom")
cite()
cite()
cite(APA)
RStudio.Version()
citation()
citation(lmer)
citation(lme4)
citation("lme4")
anova(M1, M2, M3, M4, M5)
summary(M3)
Anova(M5, type = 3)
describeBy(x = DataVar, group = DataVar$Trait)
View(DataVar)
M7 <- lmer(Variance ~ Trait + Identity + (1|Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
anova(M1, M2, M3, M4, M5, M7)
anova(M1, M4, M7
)
anova(M1, M2, M3, M5, M7)
M1 <- lmer(Variance ~ (1|Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M2 <- lmer(Variance ~ Identity + (1|Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M3 <- lmer(Variance ~ Trait + (1|Participant)+ (1|Identity/ImageID), data = DataVar, REML = FALSE)
M4 <- lmer(Variance ~ Trait + Identity + (1|Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M5 <- lmer(Variance ~ Trait*Identity + (1|Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
anova(M1, M2, M3, M4, M5)
summary(M5)
Anova(M5)
anova(M1, M2, M3, M4, M5)
M1 <- lmer(Variance ~ (1|Trait/Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M2 <- lmer(Variance ~ Identity + (1|Trait/Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M3 <- lmer(Variance ~ Trait + (1|Trait/Participant)+ (1|Identity/ImageID), data = DataVar, REML = FALSE)
M4 <- lmer(Variance ~ Trait + Identity + (1|Trait/Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M5 <- lmer(Variance ~ Trait*Identity + (1|Trait/Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
anova(M1, M2, M3, M4, M5)
summary(M5)
Anova(M5)
anova(M1, M2, M3, M4, M5)
anova(M1, M2, M3, M4, M5)
anova(M1, M2, M4)
anova(M2, M4)
summary(M1)
summary(M5)
M6 <- lmer(Variance ~ (1|Trait/Participant), data = DataVar, REML = FALSE)
M7 <- lmer(Variance ~ Identity + (1|Trait/Participant), data = DataVar, REML = FALSE)
M8 <- lmer(Variance ~ Trait + (1|Trait/Participant), data = DataVar, REML = FALSE)
M9 <- lmer(Variance ~ Trait + Identity + (1|Trait/Participant), data = DataVar, REML = FALSE)
M10 <- lmer(Variance ~ Trait*Identity + (1|Trait/Participant), data = DataVar, REML = FALSE)
anova(M6, M7, M8, M9, M10)
library(readxl)
Game_of_Thrones_Cleaned <- read_excel("Downloads/Game of Thrones - Cleaned.xls")
View(Game_of_Thrones_Cleaned)
got <- read_excel("Downloads/Game of Thrones - Cleaned.xls")
got$chooser <- factor(got$chooser, levels = c("nc", "choose"))
got$Confidence <- recode(got$Confidence.RESP, "1 = '1-2'; 2 = '1-2'; 3 = '3'; 4 = '4'; 5 = '5'")
got$Confidence <- ordered(got$Confidence)
got_choose <- got[got$chooser == "choose",]
got_choose$CFMT.Z <- scale(got_choose$CFMT)
got_delay_long <- got[got$Delay %in% c("None", "S1-S2", "S3"), ]
got_delay_long_chooser <- got_delay_long[got_delay_long$chooser == "choose",]
got_delay_long_chooser$CFMT.Z <- scale(got_delay_long_chooser$CFMT)
got_delay_med <- got[got$Delay %in% c("None", "S4", "S5"), ]
got_delay_med_chooser <- got_delay_med[got_delay_med$chooser == "choose",]
got_delay_med_chooser$CFMT.Z <- scale(got_delay_med_chooser$CFMT)
got_delay_short <- got[got$Delay %in% c("None", "S6"), ]
got_delay_short_chooser <- got_delay_short[got_delay_short$chooser == "choose",]
got_delay_short_chooser$CFMT.Z <- scale(got_delay_short_chooser$CFMT)
# Exposure
got_exposure_long <- got[got$Exposure %in% c("1.LeadCharacter", "4.Unfamiliar"),]
got_exposure_long_choose <- got_exposure_long[got_exposure_long$chooser == "choose",]
got_exposure_long_choose$CFMT.Z <- scale(got_exposure_long_choose$CFMT)
got_exposure_med <- got[got$Exposure %in% c("2.SupportCharacter", "4.Unfamiliar"), ]
got_exposure_med_choose <- got_exposure_med[got_exposure_med$chooser == "choose",]
got_exposure_med_choose$CFMT.Z <- scale(got_exposure_med_choose$CFMT)
got_exposure_short <- got[got$Exposure %in% c("3.BitPart", "4.Unfamiliar"), ]
got_exposure_short_choose <- got_exposure_short[got_exposure_short$chooser == "choose",]
got_exposure_short_choose$CFMT.Z <- scale(got_exposure_short_choose$CFMT)
# Similarity
got$simMatch <- ifelse(got$Similarity == "Unknown", "Yes",
ifelse(as.character(got$Similarity) == as.character(got$PicCondition), "Yes",
"No"))
got_similarity <- got[got$simMatch == "Yes",]
got_similarity_choose <- got_similarity[got_similarity$chooser == "choose",]
got_similarity_choose$CFMT.Z <- scale(got_similarity_choose$CFMT)
system.time(mod_all <- glmer(FaceStim.ACC ~ (CFMT.Z * Confidence) + (1|Subject), data = got_choose, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 10e5))))
system.time(short_delay_mod <- glmer(FaceStim.ACC ~ (CFMT.Z * Confidence) + (1|Subject), data = got_delay_short_chooser, family = "binomial", glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 10e5))))
mod_all_ps$anova_table
library(doParallel)
library(MASS)
library(gtools)
library(lme4)
library(psych)
library(car)
library(effects)
library(afex)
library(ggplot2)
library(cowplot)
library(phia)
library(MuMIn)
library(DHARMa)
installed.packages(cowplot)
installed.packages("cowplot")
library(cowplot)
short_delay_ps$anova_table
mod_all_fit <- simulateResiduals(mod_all, n = 1000, seed = 999)
plot(mod_all_fit)
testResiduals(mod_all_fit)
summary(M5)
M5 <- lmer(Variance ~ Trait*Identity + (1|Trait/Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M20 <- lmer(Variance ~ Trait*Identity + (1+ Identity|Participant) + (1|Identity/ImageID), data = DataVar, REML = FALSE)
M20 <- lmer(Variance ~ Trait + (1+ Identity|Participant), data = DataVar, REML = FALSE)
summary(M20)
library(readxl)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
library(tidyverse)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
Roy.df$IDno. <- NULL
Roy.df$IDno. <- NULL
View(Roy.df)
Roy.df$IDno. <- NULL
Roy.df$ID no. <- NULL
Roy.df$ID no<- NULL
Roy.df$ID no. <- NULL
Roy.df$`ID no.` <- NULL
Roy.df$age <- NULL
Roy.df$`ID no.` <- NULL
Roy.df$age <- NULL
Roy.df$Gender <- NULL
Roy.df$Cond <- NULL
Roy.df <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
Roy.df <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40)
Roy.df2 <- gather(Roy.df, Chooser, Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Roy.df, Feedback, Response, FDBK1:Conf40)
Roy.df2 <- gather(Roy.df, Chooser, Response, Chooser_NonChooser1:Chooser_NonChooser40)
hist(residuals(M5))
hist(residuals(M5$Variance))
library(readxl)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
library(tidyverse)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
Roy.df2 <- gather(Roy.df, Chooser, Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Roy.df, Feedback, Response, FDBK1:Conf40)
View(Roy.df2)
Roy.df2 <- gather(Roy.df, Chooser, Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Response, FDBK1:Conf40)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
plot(M5, which = 1)
plot(M5, which = 2)
?which =
)
?plot
class(M5)
methods(lmer)
methods("lmer")
qqnorm(resid(M5))
DataVar %>%
ggplot(DataVar, aes(x = Identity, y = Variance)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ Trait)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
ggplot(DataVar, aes(x = Identity, y = Variance)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ Trait)
levels(DataVar$Identity) <- c("1", "2", "3", "4", "5", "6", "7", "8",
"9", "10", "11", "12", "13", "14", "15", "16", "17")
DataVar$Identity1 <- as.numeric(as.character(DataVar$Identity))
DataVar$Variance1 <- scale(DataVar$Variance, center = TRUE, scale = TRUE)
ggplot(DataVar, aes(x = Identity1, y = Variance1)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(DataVar, aes(x = Identity1, y = Variance1, colour = Trait)) +
geom_point() +
geom_smooth(method = "lm")
plot(M5)
install.packages("ggeffects")
M5.pred <- ggpredict(M5, terms = c ("Identity"))
library("ggeffects")
M5.pred <- ggpredict(M5, terms = c ("Identity"))
ggplot(M5) +
geom_line(aes(x = x, y = predicted)) +
geom_ribbon(aes(x = x, ymin = predicted -std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
ggplot(M5) +
geom_line(aes(Identity = x, y = predicted)) +
geom_ribbon(aes(x = x, ymin = predicted -std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
ggplot(M5) +
geom_line(aes(x  = Identity, y = predicted)) +
geom_ribbon(aes(x = x, ymin = predicted -std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
ggplot(M5) +
geom_line(aes(x  = Identity, y = Variance)) +
geom_ribbon(aes(x = x, ymin = predicted -std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
ggplot(M5) +
geom_line(aes(x  = Identity, y = Variance)) +
geom_ribbon(aes(x = Identity, ymin = predicted -std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
ggplot(M5) +
geom_line(aes(x  = Identity, y = Variance)) +
geom_ribbon(aes(x = Identity, ymin = Variance -std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
ggplot(M5) +
geom_line(aes(x  = Identity, y = M5.pred)) +
geom_ribbon(aes(x = Identity, ymin = M5.pred - std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +
geom_point(data = DataVar,
aes(x = Identity, y = Variance, colour = trait))
M5.pred <- ggpredict(M5, terms = c ("Identity"))
installed.packages("stargazer")
install.packages("stargazer")
library("stargazer")
stargazer(M5, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
stargazer(M5, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
stargazer(M5, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
detach("package:datasets", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:lmerTest", unload = TRUE)
stargazer(M5, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
detach("package:methods", unload = TRUE)
detach("package:stats", unload = TRUE)
detach("package:stringr", unload = TRUE)
detach("package:tibble", unload = TRUE)
detach("package:tidyr", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
detach("package:utils", unload = TRUE)
stargazer(M5, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
stargazer(M5)
stargazer(M5$Identity, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
stargazer(DataVar, type = "text",
digits = 3,
star.cutoffs = c(0.05, 0.01,0.001,
digit.separator = ""))
library(readxl)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
g
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
library(tidyr)
library(tidyverse)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
library(readxl)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
View(Combinedsubsets_cleaned)
Roy.df <- Combinedsubsets_cleaned
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40)
Roy.df2 <- gather(Roy.df, Participant, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Participant, Feed_response, FDBK1:FDBK40) %>%
gather(Participant, hyp_response, Hyp1:Hyp40) %>%
gather(Participant, acc_response, Acc1:Acc40) %>%
gather(Participant, conf_response, Conf1:Conf40)
Roy.df2 <- gather(Roy.df, Participant, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Participant, Feed_response, FDBK1:FDBK40) %>%
gather(Participant, hyp_response, Hyp1:Hyp40) %>%
gather(Participant, acc_response, Acc1:Acc40)
Roy.df2 <- gather(Roy.df, Participant, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Participant, Feed_response, FDBK1:FDBK40)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
View(Roy.df)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
library(readxl)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
View(Roy.df)
?gather
??gather
library(tidyverse)
library(tidyr)
Combinedsubsets_cleaned <- read_excel("~/Downloads/Combinedsubsets-cleaned.xlsx")
Roy.df <- Combinedsubsets_cleaned
View(Roy.df)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
View(Roy.df2)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:FDBK40)
View(Roy.df2)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
View(Roy.df2)
Roy.df3 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_response, FDBK1:FDBK40) %>%
gather(Hypothesis, hyp_response, Hyp1:Hyp40) %>%
gather(Accuracy, acc_response, Acc1:Acc40) %>%
gather(Confidence, conf_response, Conf1:Conf40)
Roy.df.Choose <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40)
View(Roy.df.Choose)
Roy.df.Choose <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40)
View(Roy.df.Choose)
Roy.df2 <- gather(Roy.df, Chooser, Choose_Response, Chooser_NonChooser1:Chooser_NonChooser40) %>%
gather(Feedback, Feed_Response, FDBK1:Conf40)
View(Roy.df2)
DataVar <- read_excel(here("2_Variability_Long.xlsx"))
library("devtools")
library("tidyverse")
library("lme4")
library("ggplot2")
library("drlib")
library("Hmisc")
library("psych")
library("afex")
library("readxl")
library("haven")
library("scales")
library("here")
DataVar <- read_excel(here("2_Variability_Long.xlsx"))
setwd("~/Documents/Swinburne/PHD/PhD Thesis/Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/TaylorStudy1")
DataVar <- read_excel(here("2_Variability_Long.xlsx"))
DataVar <- read_excel(here("2_Variability_Long.xlsx"))
source('~/Documents/Swinburne/PHD/PhD Thesis/Studies/Study 1/Data and analysis/Study 1_Data/Final scripts and data/TaylorStudy1/Study 1 script.R')
install.packages("tidyverse")
install.packages("lme4")
install.packages("ggplot2")
install.packages("remotes")
install.packages("psych")
install.packages("afex")
install.packages("readxl")
install.packages("haven")
install.packages("scales")
install.packages("devtools")
install.packages("remotes")
install.packages("psych")
install.packages("afex")
install.packages("readxl")
install.packages("haven")
install.packages("scales")
install.packages("devtools")
install.packages("readxl")
install.packages("haven")
install.packages("scales")
install.packages("devtools")
install.packages("scales")
install.packages("devtools")
DataVar <- read_excel(here("2_Variability_Long.xlsx"))
